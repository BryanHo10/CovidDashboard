[{"C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\pages\\Dashboard.js":"1","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\api\\covid.js":"2","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\index.js":"3","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\App.js":"4","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\utils\\format.js":"5","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\api\\api.js":"6","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\components\\Dashboard\\CovidMap.js":"7","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\components\\Dashboard\\CovidState.js":"8","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\constants.js":"9"},{"size":2822,"mtime":1606811197147,"results":"10","hashOfConfig":"11"},{"size":1212,"mtime":1606807985582,"results":"12","hashOfConfig":"11"},{"size":570,"mtime":1606712219210,"results":"13","hashOfConfig":"11"},{"size":498,"mtime":1606715565818,"results":"14","hashOfConfig":"11"},{"size":651,"mtime":1606811124907,"results":"15","hashOfConfig":"11"},{"size":111,"mtime":1606715565819,"results":"16","hashOfConfig":"11"},{"size":1221,"mtime":1606804473157,"results":"17","hashOfConfig":"11"},{"size":1548,"mtime":1606809085940,"results":"18","hashOfConfig":"11"},{"size":2573,"mtime":1606804254420,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xoksxk",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\pages\\Dashboard.js",["41","42"],"C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\api\\covid.js",[],["43","44"],"C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\index.js",[],"C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\App.js",[],"C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\utils\\format.js",[],"C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\api\\api.js",[],"C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\components\\Dashboard\\CovidMap.js",["45"],"import React, { useEffect, useState } from \"react\";\r\nimport USAMap from \"react-usa-map\";\r\nimport \"./CovidMap.css\";\r\nimport { getCurrentStatesData } from \"../../api/covid\";\r\nimport CovidState from \"./CovidState\";\r\n\r\nconst CovidMap = () => {\r\n\tconst [covidStatesConfig, setCovidStatesConfig] = useState({});\r\n\tconst [currentState, setCurrentState] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCurrentStatesData().then((data) => {\r\n\t\t\tsetCovidStatesConfig(generateStatesConfig(data));\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst generateClickHandler = (stateData) => {\r\n\t\treturn (event) => {\r\n\t\t\tsetCurrentState(stateData);\r\n\t\t\tconsole.log(stateData);\r\n\t\t};\r\n\t};\r\n\tconst generateStatesConfig = (covidStates) => {\r\n\t\tlet config = {};\r\n\t\tcovidStates.forEach((stateData) => {\r\n\t\t\tconst brightness = Math.abs(100 - Math.log(stateData.death) * 8.5);\r\n\t\t\tconfig[stateData.state] = {\r\n\t\t\t\tfill: `hsl(26, 100%, ${brightness}%)`,\r\n\t\t\t\tclickHandler: generateClickHandler(stateData),\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn config;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>{currentState && <CovidState stateData={currentState} />}</div>\r\n\t\t\t<div className=\"covid-map\">\r\n\t\t\t\t<USAMap customize={covidStatesConfig} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default CovidMap;\r\n","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\components\\Dashboard\\CovidState.js",["46","47","48","49","50","51"],"import { Paper, Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getHistoricStateData } from \"../../api/covid\";\r\nimport { getStateByAbbr } from \"../../utils/format\";\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n\treturn (\r\n\t\t<div role=\"tabpanel\" hidden={value !== index} {...other}>\r\n\t\t\t{value === index && <div>{children}</div>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst CovidState = ({ stateData }) => {\r\n\tconst {\r\n\t\tdaeath,\r\n\t\tpositive,\r\n\t\trecovered,\r\n\t\tnegative,\r\n\t\thospitalized,\r\n\t\tstate,\r\n\t} = stateData;\r\n\tconst [value, setValue] = useState(\"deaths\");\r\n\r\n\tuseEffect(() => {\r\n\t\tgetHistoricStateData(state.toLowerCase()).then((data) => {\r\n\t\t\tconsole.log(data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleChange = (event, newValue) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>\r\n\t\t\t\t{getStateByAbbr(state)} ({state})\r\n\t\t\t</h1>\r\n\t\t\t<Paper>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\ttextColor=\"primary\"\r\n\t\t\t\t\tcentered\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab value=\"deaths\" label=\"Number of Deaths\" />\r\n\t\t\t\t\t<Tab value=\"positve\" label=\"Number of Positive Cases\" />\r\n\t\t\t\t\t<Tab value=\"recover\" label=\"Number Recovered\" />\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Paper>\r\n\t\t\t<TabPanel value={value} index=\"deaths\">\r\n\t\t\t\tNumber of Deaths\r\n\t\t\t</TabPanel>\r\n\t\t\t<TabPanel value={value} index=\"positve\">\r\n\t\t\t\tNumber of Positive Cases\r\n\t\t\t</TabPanel>\r\n\t\t\t<TabPanel value={value} index=\"recover\">\r\n\t\t\t\tNumber Recovered\r\n\t\t\t</TabPanel>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default CovidState;\r\n","C:\\Users\\Brian\\Documents\\Programs\\CSUF-FrontEnd\\covid-dashboard\\src\\constants.js",[],{"ruleId":"52","severity":1,"message":"53","line":38,"column":20,"nodeType":"54","messageId":"55","endLine":38,"endColumn":22},{"ruleId":"56","severity":1,"message":"57","line":59,"column":7,"nodeType":"58","endLine":62,"endColumn":9},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":15,"column":5,"nodeType":"65","endLine":15,"endColumn":7,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":16,"column":3,"nodeType":"69","messageId":"70","endLine":16,"endColumn":9},{"ruleId":"67","severity":1,"message":"71","line":17,"column":3,"nodeType":"69","messageId":"70","endLine":17,"endColumn":11},{"ruleId":"67","severity":1,"message":"72","line":18,"column":3,"nodeType":"69","messageId":"70","endLine":18,"endColumn":12},{"ruleId":"67","severity":1,"message":"73","line":19,"column":3,"nodeType":"69","messageId":"70","endLine":19,"endColumn":11},{"ruleId":"67","severity":1,"message":"74","line":20,"column":3,"nodeType":"69","messageId":"70","endLine":20,"endColumn":15},{"ruleId":"63","severity":1,"message":"75","line":29,"column":5,"nodeType":"65","endLine":29,"endColumn":7,"suggestions":"76"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateStatesConfig'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-unused-vars","'daeath' is assigned a value but never used.","Identifier","unusedVar","'positive' is assigned a value but never used.","'recovered' is assigned a value but never used.","'negative' is assigned a value but never used.","'hospitalized' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [generateStatesConfig]",{"range":"85","text":"86"},"Update the dependencies array to be: [state]",{"range":"87","text":"88"},[495,497],"[generateStatesConfig]",[735,737],"[state]"]